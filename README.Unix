*** not much here yet ***

If you are reading this in hopes that you will find the answer to a
specific question, please send the question to curt@me.umn.edu and
suggest that I include the answer here.


Compilers and Portability
=========================

Flight Gear is known to build with egcs-1.1 and higher, as well as
gcc-2.8 and higher.  Your mileage may vary with earlier versions of
these compilers although support for gcc-2.7.x is mostly there.

For other platforms where you may have access to native compilers,
again your mileage may vary.  We would like to support as many
different compilers and platforms as possible.  Please relay any
changes you make (or problems you encounter) back to
curt@flightgear.org, so that in the future we can better support your
platform and your compiler.  I have access to a few different
platforms, but I must depend on others to make sure their favorite
platform and compiler is well supported.


GLUT
====

Flight Gear requires GLUT version 3.7 or later (aka GameGLUT._ GLUT
needs to be installed on your system before you can build Flight Gear.
GLUT can be found at:

    http://reality.sgi.com/opengl/glut3/glut3.html

GLUT (pronounced like the glut in gluttony) is the OpenGL Utility
Toolkit, a window system independent toolkit for writing OpenGL
programs. It implements a simple windowing application programming
interface (API) for OpenGL. GLUT makes it considerably easier to learn
about and explore OpenGL programming.  GLUT provides a portable API so
you can write a single OpenGL program that works on both Win32 PCs and
X11 workstations.


Joystick Support
================

GLUT only has win32 joystick support but even at that, it is not well
implimented.  So we use Steve Backer's joystick library when possible,
and fall back to GLUT for win32 until Steve's library adds win32
support.

To make sure joystick support is included when building under Linux:

  - make sure you have the proper joystick module installed.
  - make sure the proper devices are created in /dev.
  - /usr/include/linux/joystick.h must exist on your system.


Native SGI Irix Compilers
=========================

If you are building with native SGI compilers try running configure like the
following (assuming sh syntax):

  CC=cc CXX=CC CFLAGS=-Xcpluscomm ./configure

Then (and this step is *VERY* important for your success) run the following 
command:

  find . -name Makefile -exec irix-hack.pl {} \;

This touches up the Makefiles to build libfoo.a with 

  CC -ar -o libfoo.a file1.o file2.o ...

The traditional method is to run:

  ar cru libfoo.a file1.o file2.o

I wonder if this means that the native SGI "ar" is somewhat broke?

Note, you should make sure you have perl installed on your system.  The
"irix-hack.pl" script assumes that perl is located in /usr/bin/perl so
if this isn't the proper location on your system, change it in the first
line of "irix-hack.pl" before running the above command.  One way to see
if perl is on your system (and determine where) is to run:

  which perl

Perl can be installed from "eoe.sw.gifts_perl" or can be fetched and
built from the net.

Finally you should run Gnu make.  The native Irix make utility just
can't handle the makefiles generated by the automake program.  Thus 
you will need to use Gnu make.  It's called "gmake" on my system so I 
just run:

  gmake

Don't worry about the make failing in the Tools directory.  That's all
under construction stuff right now (3/9/99) and if you get that far, 
rejoice because it means the simulator was successfully built in the 
Simulator/Main subdirectory.
